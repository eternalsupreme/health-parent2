<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.MemberMapper">
    <resultMap id="BaseResultMap" type="com.health.bean.Member">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="fileNumber" property="filenumber"
                jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="idCard" property="idcard" jdbcType="VARCHAR"/>
        <result column="phoneNumber" property="phonenumber"
                jdbcType="VARCHAR"/>
        <result column="regTime" property="regtime" jdbcType="DATE"/>
        <result column="password" property="password"
                jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime"
                jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime"
                jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		id, fileNumber, name, sex, idCard, phoneNumber, regTime, password, email,
		birthday,
		remark, create_time, update_time, status
	</sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.health.bean.MemberExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_member
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="java.lang.Integer">
		delete from t_member
		where id = #{id,jdbcType=INTEGER}
	</delete>
    <delete id="deleteByExample"
            parameterType="com.health.bean.MemberExample">
        delete from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.health.bean.Member">
		insert into t_member (id, fileNumber, name,
		sex, idCard, phoneNumber,
		regTime, password, email,
		birthday, remark, create_time,
		update_time, status)
		values (#{id,jdbcType=INTEGER}, #{filenumber,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR},
		#{regtime,jdbcType=DATE}, #{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{birthday,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
	</insert>
    <insert id="insertSelective"
            parameterType="com.health.bean.Member" useGeneratedKeys="true" keyProperty="id">
        insert into t_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="filenumber != null">
                fileNumber,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idcard != null">
                idCard,
            </if>
            <if test="phonenumber != null">
                phoneNumber,
            </if>
            <if test="regtime != null">
                regTime,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="filenumber != null">
                #{filenumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                #{phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="regtime != null">
                #{regtime,jdbcType=DATE},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.health.bean.MemberExample"
            resultType="java.lang.Integer">
        select count(*) from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_member
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.filenumber != null">
                fileNumber = #{record.filenumber,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=VARCHAR},
            </if>
            <if test="record.idcard != null">
                idCard = #{record.idcard,jdbcType=VARCHAR},
            </if>
            <if test="record.phonenumber != null">
                phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="record.regtime != null">
                regTime = #{record.regtime,jdbcType=DATE},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_member
        set id = #{record.id,jdbcType=INTEGER},
        fileNumber = #{record.filenumber,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=VARCHAR},
        idCard = #{record.idcard,jdbcType=VARCHAR},
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
        regTime = #{record.regtime,jdbcType=DATE},
        password = #{record.password,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        birthday = #{record.birthday,jdbcType=DATE},
        remark = #{record.remark,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.health.bean.Member">
        update t_member
        <set>
            <if test="filenumber != null">
                fileNumber = #{filenumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                idCard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="phonenumber != null">
                phoneNumber = #{phonenumber,jdbcType=VARCHAR},
            </if>
            <if test="regtime != null">
                regTime = #{regtime,jdbcType=DATE},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.health.bean.Member">
		update t_member
		set fileNumber = #{filenumber,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		idCard = #{idcard,jdbcType=VARCHAR},
		phoneNumber = #{phonenumber,jdbcType=VARCHAR},
		regTime = #{regtime,jdbcType=DATE},
		password = #{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=DATE},
		remark = #{remark,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

    <!-- 查询会员信息-->
    <select id="queryMemberInfo" resultType="com.health.vo.MemberQueryVO">
        SELECT
        tm.id AS id,
        tm.fileNumber AS filenumber,
        tm.name AS name,
        tm.sex AS sex,
        tm.idCard AS idcard,
        tm.phoneNumber AS phonenumber,
        tm.remark as remark,
        tm.regTime AS regtime,
        tm.PASSWORD AS password,
        tm.email AS email,
        TIMESTAMPDIFF(YEAR,tm.birthday,CURDATE()) AS age,
        tm.STATUS AS status,
        tmi.marital_status AS maritalStatus,
        tmi.job AS job,
        tmi.education_degree AS educationDegree,
        tmi.native_place AS nativePlace,
        th.health_mgr_name AS healthMgrName
        FROM t_member tm
        left join t_member_info tmi on tm.id = tmi.t_member_id
        left join t_healthmgr th on tmi.health_mgr_id = th.health_mgr_id
        WHERE
        tm.status = 0
        <if test="value != null and value.length > 0">
            and tm.name like #{value} or tm.fileNumber like #{value} or tm.phoneNumber like #{value}
        </if>
    </select>

    <select id="countMemberByMonth" resultType="java.lang.Integer">
        SELECT count(*) FROM t_member m WHERE m.regTime &lt;= #{date}
    </select>

</mapper>