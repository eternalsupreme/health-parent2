<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.health.mapper.MemberInfoMapper">
    <resultMap id="BaseResultMap"
               type="com.health.bean.MemberInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="t_member_id" property="tMemberId"
                jdbcType="INTEGER"/>
        <result column="marital_status" property="maritalStatus"
                jdbcType="INTEGER"/>
        <result column="job" property="job" jdbcType="VARCHAR"/>
        <result column="education_degree" property="educationDegree"
                jdbcType="VARCHAR"/>
        <result column="native_place" property="nativePlace"
                jdbcType="VARCHAR"/>
        <result column="health_mgr_id" property="healthMgrId"
                jdbcType="INTEGER"/>
        <result column="create_time" property="createTime"
                jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime"
                jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem"
                                             open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		id, t_member_id, marital_status, job, education_degree, native_place,
		health_mgr_id,
		create_time, update_time
	</sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.health.bean.MemberInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_member_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_member_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="java.lang.Integer">
		delete from t_member_info
		where id = #{id,jdbcType=INTEGER}
	</delete>
    <delete id="deleteByExample"
            parameterType="com.health.bean.MemberInfoExample">
        delete from t_member_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.health.bean.MemberInfo">
		insert into t_member_info (id, t_member_id, marital_status,
		job, education_degree, native_place,
		health_mgr_id, create_time, update_time
		)
		values (#{id,jdbcType=INTEGER}, #{tMemberId,jdbcType=INTEGER},
		#{maritalStatus,jdbcType=INTEGER},
		#{job,jdbcType=VARCHAR}, #{educationDegree,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR},
		#{healthMgrId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
    <insert id="insertSelective"
            parameterType="com.health.bean.MemberInfo">
        insert into t_member_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tMemberId != null">
                t_member_id,
            </if>
            <if test="maritalStatus != null">
                marital_status,
            </if>
            <if test="job != null">
                job,
            </if>
            <if test="educationDegree != null">
                education_degree,
            </if>
            <if test="nativePlace != null">
                native_place,
            </if>
            <if test="healthMgrId != null">
                health_mgr_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tMemberId != null">
                #{tMemberId,jdbcType=INTEGER},
            </if>
            <if test="maritalStatus != null">
                #{maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="educationDegree != null">
                #{educationDegree,jdbcType=VARCHAR},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="healthMgrId != null">
                #{healthMgrId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.health.bean.MemberInfoExample"
            resultType="java.lang.Integer">
        select count(*) from t_member_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_member_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.tMemberId != null">
                t_member_id = #{record.tMemberId,jdbcType=INTEGER},
            </if>
            <if test="record.maritalStatus != null">
                marital_status = #{record.maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="record.job != null">
                job = #{record.job,jdbcType=VARCHAR},
            </if>
            <if test="record.educationDegree != null">
                education_degree = #{record.educationDegree,jdbcType=VARCHAR},
            </if>
            <if test="record.nativePlace != null">
                native_place = #{record.nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="record.healthMgrId != null">
                health_mgr_id = #{record.healthMgrId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_member_info
        set id = #{record.id,jdbcType=INTEGER},
        t_member_id = #{record.tMemberId,jdbcType=INTEGER},
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
        job = #{record.job,jdbcType=VARCHAR},
        education_degree = #{record.educationDegree,jdbcType=VARCHAR},
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
        health_mgr_id = #{record.healthMgrId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.health.bean.MemberInfo">
        update t_member_info
        <set>
            <if test="tMemberId != null">
                t_member_id = #{tMemberId,jdbcType=INTEGER},
            </if>
            <if test="maritalStatus != null">
                marital_status = #{maritalStatus,jdbcType=INTEGER},
            </if>
            <if test="job != null">
                job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="educationDegree != null">
                education_degree = #{educationDegree,jdbcType=VARCHAR},
            </if>
            <if test="nativePlace != null">
                native_place = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="healthMgrId != null">
                health_mgr_id = #{healthMgrId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.health.bean.MemberInfo">
		update t_member_info
		set t_member_id = #{tMemberId,jdbcType=INTEGER},
		marital_status = #{maritalStatus,jdbcType=INTEGER},
		job = #{job,jdbcType=VARCHAR},
		education_degree = #{educationDegree,jdbcType=VARCHAR},
		native_place = #{nativePlace,jdbcType=VARCHAR},
		health_mgr_id = #{healthMgrId,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>